!function(){"use strict";angular.module("app",["ngRoute","ngCookies"]).config(["$routeProvider","$locationProvider",function(e,t){e.when("/",{templateUrl:"views/public/pages/listpage.html",controller:"listpage_controller"}).when("/bears/:id",{templateUrl:"views/public/pages/detailpage.html",controller:"detail_controller"}).when("/login",{templateUrl:"views/public/pages/login.html",controller:"login_controller"}).when("/cms",{templateUrl:"views/public/pages/cms.html",controller:"cms_controller"}).otherwise({redirectTo:"/"}),t.html5Mode(!0)}])}(),function(){"use strict";var e=function(e,t,n,r,o){e.homeTexts=[],e.detailTexts=[],e.showInput=!1;var a=t.get("m-token");a||n.path("/login"),a&&r.authenticateToken(a).then(function(e){e.success?i():e.error&&n.path(e.redirect_url)});var i=function(){o.getContentForPage(1).then(function(t){e.homeTexts=t}),o.getContentForPage(2).then(function(t){e.detailTexts=t})};e.saveText=function(e){e.id&&o.updateContentForTextId(e.id,e.text).then(function(e){console.log(e)})}};angular.module("app").controller("cms_controller",["$scope","$cookies","$location","user_service","cms_service",e])}(),function(){"use strict";var e=function(e,t){e.newBear={name:"",home:""},e.createBear=function(){e.newBear.name&&e.newBear.home&&t.create_bear(e.newBear).then(function(t){t.id&&t.name&&t.home&&(e.bears.push(t),e.newBear={name:"",home:""})})}};angular.module("app").controller("create_controller",["$scope","bear_service",e])}(),function(){"use strict";var e=function(e,t,n){n.get_bear_by_id(t.id).then(function(t){e.currentBear=t})};angular.module("app").controller("detail_controller",["$scope","$routeParams","bear_service",e])}(),function(){"use strict";var e=function(e,t,n){e.bears=[],t.get_bears().then(function(t){e.bears=t}),e.deleteBear=function(n){t.delete_bear(n.id).then(function(t){if("success"===t.msg){var r=e.bears.indexOf(n);r>-1&&e.bears.splice(r,1)}})},n.getContentForPage(1).then(function(e){$.each(e,function(e,t){$('[data-t-id="'+t.id+'"]').html(t.text)})})};angular.module("app").controller("listpage_controller",["$scope","bear_service","cms_service",e])}(),function(){"use strict";var e=function(e,t,n){e.username="marijn",e.password="12345",e.login=function(){n.login(e.username,sha256(e.password)).then(function(e){t.path(e.redirect_url)})}};angular.module("app").controller("login_controller",["$scope","$location","user_service",e])}(),function(){"use strict";var e=function(e){return{get_bears:function(){return e.get("/api/bears").then(function(e){return e.data})},get_bear_by_id:function(t){return e.get("/api/bears/"+t).then(function(e){return e.data})},create_bear:function(t){return e.post("/api/bears",t).then(function(e){return e.data})},delete_bear:function(t){return e.put("/api/bears/"+t).then(function(e){return e.data})}}};angular.module("app").factory("bear_service",["$http",e])}(),function(){"use strict";var e=function(e){return{getAllContent:function(){return e.get("/api/cms/pages").then(function(e){return e.data})},getContentForPage:function(t){return e.get("/api/cms/page/"+t).then(function(e){return e.data})},updateContentForTextId:function(t,n){return e.post("/api/cms/page/"+t,{text:n}).then(function(e){return e.data})}}};angular.module("app").factory("cms_service",["$http",e])}(),function(){"use strict";var e=function(e){return{login:function(t,n){return e.post("/api/login",{login:t,password:n}).then(function(e){return e.data})},authenticateToken:function(t){return e.post("/api/authtoken",{"m-token":t}).then(function(e){return e.data})}}};angular.module("app").factory("user_service",["$http",e])}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
